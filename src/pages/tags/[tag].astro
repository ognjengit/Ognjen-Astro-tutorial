---
import type { GetStaticPaths, MarkdownInstance } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import { voidElementNames } from "astro/runtime/server/index.js";

interface Props {
  posts: MarkdownInstance<Record<string, any>>[];
}

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await Astro.glob("../posts/*.md");

  const uniqueTags = Array.from(
    new Set(allPosts.flatMap((post) => post.frontmatter.tags))
  );

  return uniqueTags.map((tag) => {
    const posts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );

    return {
      params: { tag },
      props: { posts },
    };
  });
};

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPost url={post.url} title={post.frontmatter.title} />
      ))
    }
  </ul>
</BaseLayout>
